plugins {
    id 'java'
    id 'com.diffplug.spotless' version '6.19.0'
}

// Enhanced repository configuration for better networking performance
repositories {
    mavenCentral {
        // Enable parallel downloads and connection pooling
        content {
            includeGroupByRegex ".*"
        }
    }
    // Add high-performance mirrors for better global connectivity
    maven {
        name = "Maven Central Mirror"
        url = "https://repo1.maven.org/maven2/"
    }
    // Backup repositories for resilience
    maven {
        name = "JCenter"
        url = "https://jcenter.bintray.com/"
    }
}

dependencies {
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.microsoft.onnxruntime:onnxruntime:1.18.0'
}

// Apply commons-math to subprojects so modules (like `app`) can use it.
subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral {
            content {
                includeGroupByRegex ".*"
            }
        }
        maven {
            name = "Maven Central Mirror"
            url = "https://repo1.maven.org/maven2/"
        }
        maven {
            name = "JCenter"
            url = "https://jcenter.bintray.com/"
        }
    }

    dependencies {
        implementation 'org.apache.commons:commons-math3:3.6.1'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
        implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
        implementation 'com.microsoft.onnxruntime:onnxruntime:1.18.0'
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.hamcrest:hamcrest:2.2'
        testImplementation 'org.mockito:mockito-core:4.11.0'
    }
}
 
// Add test dependency for root project tests
dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:4.11.0'
}

// Spotless configuration for root project
spotless {
    java {
        googleJavaFormat('1.17.0')
        target 'src/main/java/**/*.java', 'src/test/java/**/*.java'
    }
}

// Convenience alias so contributors can run formatting with a simple task name:
tasks.register('format') {
    description = 'Format source files using Spotless (google-java-format).'
    group = 'formatting'
    dependsOn 'spotlessApply'
}

// Performance optimization configurations
tasks.withType(JavaCompile) {
    options.incremental = true
    options.fork = true
    options.forkOptions.jvmArgs += [
        '-XX:+UseG1GC',
        '-XX:MaxGCPauseMillis=200',
        '-Xmx2g',
        '-Xms1g'
    ]
}

// Network optimization for all tasks
tasks.configureEach {
    doFirst {
        System.setProperty('java.net.preferIPv4Stack', 'true')
        System.setProperty('java.net.preferIPv6Addresses', 'false')
        System.setProperty('http.keepAlive', 'true')
        System.setProperty('http.maxConnections', '20')
        System.setProperty('http.maxRedirects', '10')
        // Reduced DNS cache TTL for faster failover while keeping negative cache short
        java.security.Security.setProperty('networkaddress.cache.ttl', '30')
        java.security.Security.setProperty('networkaddress.cache.negative.ttl', '5')
    }
}

// Add application plugin to root project for running demos
apply plugin: "application"

application {
    mainClass = "com.trading.service.backtest.BacktestDemo"
    applicationDefaultJvmArgs = [
        '-XX:+UseG1GC',
        '-XX:MaxGCPauseMillis=200',
        '-Xmx2g',
        '-Xms1g',
        '-Djava.net.preferIPv4Stack=true',
        '-Djava.net.preferIPv6Addresses=false',
        '-Dhttp.keepAlive=true',
        '-Dhttp.maxConnections=20'
    ]
}

