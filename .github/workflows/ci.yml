name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Early network hardening (disable IPv6, set DNS, force IPv4)
      run: |
        echo "=== Early Network Hardening ==="
        echo 'net.ipv6.conf.all.disable_ipv6 = 1' | sudo tee -a /etc/sysctl.conf
        echo 'net.ipv6.conf.default.disable_ipv6 = 1' | sudo tee -a /etc/sysctl.conf
        echo 'net.ipv6.conf.lo.disable_ipv6 = 1' | sudo tee -a /etc/sysctl.conf
        sudo sysctl -p || echo "sysctl reload failed (non-fatal)"
        # Prefer IPv4
        echo 'precedence ::ffff:0:0/96  100' | sudo tee -a /etc/gai.conf
        # DNS bootstrap
        printf 'nameserver 8.8.8.8\nnameserver 1.1.1.1\nnameserver 208.67.222.222\n' | sudo tee /etc/resolv.conf
        echo "JAVA_OPTS=-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false" >> $GITHUB_ENV
        echo "GRADLE_OPTS=-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false" >> $GITHUB_ENV
        echo "IPv6 disabled value: $(cat /proc/sys/net/ipv6/conf/all/disable_ipv6 || true)"

    - name: Pre-flight connectivity warm-up
      run: |
        echo "=== Pre-flight Network Warm-Up ==="
        hosts=(repo.maven.apache.org repo1.maven.org plugins.gradle.org api.github.com)
        unreachable=0
        for h in "${hosts[@]}"; do
          echo "-- Probing $h (2 attempts) --"
          success=0
          for i in 1 2; do
            code=$(curl -4 -s -o /dev/null -w "%{http_code}" --connect-timeout 10 --max-time 20 https://$h/ || echo 000)
            echo "Attempt $i -> HTTP $code"
            if [ "$code" = "200" ] || [ "$code" = "301" ] || [ "$code" = "302" ]; then success=1; break; fi
            sleep 1
          done
          if [ $success -ne 1 ]; then
            echo "Host $h unreachable after attempts"; unreachable=$((unreachable+1));
          fi
        done
        if [ $unreachable -ge 3 ]; then
          echo "Too many critical hosts unreachable early; failing fast."; exit 2;
        fi
        echo "DNS trace for repo.maven.apache.org:" || true
        dig +trace repo.maven.apache.org || true

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Validate Gradle wrapper
      uses: gradle/actions/wrapper-validation@v3

    - name: Cache all dependencies and build artifacts
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/jdks
          ~/.gradle/daemon
          ~/.m2/repository
          build/
          app/build/
  key: full-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml', 'src/**/*.java', 'app/src/**/*.java') }}
        restore-keys: |
          full-cache-${{ runner.os }}-
          gradle-${{ runner.os }}-
          
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-disabled: false
        cache-read-only: false

    # (Legacy step removed: IPv6 disable now executed earlier)
        
    - name: Configure Gradle for maximum network resilience
      run: |
        mkdir -p ~/.gradle
        cat > ~/.gradle/gradle.properties << GRADLEEOF
        org.gradle.daemon=false
        org.gradle.parallel=true
        org.gradle.caching=true
        org.gradle.configuration-cache=false
        # Reduced retry aggressiveness to avoid long hangs
        org.gradle.network.retry.initial.delay=3000
        org.gradle.network.retry.max.delay=15000
        org.gradle.network.retry.max.attempts=6
        # Allow keep-alive for pooled connections
        systemProp.http.keepAlive=true
        systemProp.http.socketTimeout=300000
        systemProp.http.connectionTimeout=300000
        systemProp.http.nonProxyHosts=localhost|127.*|[::1]
        systemProp.http.maxRedirects=20
        systemProp.https.protocols=TLSv1.2,TLSv1.3
        systemProp.http.agent=Gradle/9.1.0
        systemProp.http.useSystemProxies=false
        systemProp.https.socketTimeout=300000
        systemProp.https.connectionTimeout=300000
        systemProp.gradle.internal.http.connectionTimeout=300000
        systemProp.gradle.internal.http.socketTimeout=300000
        systemProp.gradle.internal.repository.max.retries=10
        systemProp.java.net.preferIPv4Stack=true
        systemProp.java.net.preferIPv6Addresses=false
        systemProp.http.maxConnections=6
        systemProp.https.maxConnections=6
        GRADLEEOF

        # Create init script for repository mirrors
        mkdir -p ~/.gradle/init.d
        cat > ~/.gradle/init.d/mirror-repos.gradle << 'INITEOF'
        allprojects {
            repositories.all { ArtifactRepository repo ->
                if (repo instanceof MavenArtifactRepository) {
                    def originalUrl = repo.url.toString()
                    if (originalUrl.startsWith('https://repo1.maven.org/maven2') ||
                        originalUrl.startsWith('https://repo.maven.apache.org/maven2')) {
                        // Add mirrors for Maven Central (optionally skip primary if MIRRORS_ONLY is set)
                        remove repo
                        if (!System.getenv('MIRRORS_ONLY')) {
                            maven {
                                url 'https://repo1.maven.org/maven2/'
                                allowInsecureProtocol = false
                            }
                        }
                        maven {
                            url 'https://maven.aliyun.com/repository/central'
                            allowInsecureProtocol = false
                        }
                        maven {
                            url 'https://jcenter.bintray.com/'
                            allowInsecureProtocol = false
                        }
                    }
                }
            }
        }
        INITEOF

    - name: Display Gradle network settings
      run: |
        echo "=== gradle.properties ==="
        cat ~/.gradle/gradle.properties || true

    - name: Configure Git for reliable operations
      run: |
        git config --global http.postBuffer 524288000
        git config --global http.lowSpeedLimit 1000
        git config --global http.lowSpeedTime 300

    - name: Check external services and network diagnostics
      run: |
        echo "=== Network and External Service Diagnostics ==="
        
        echo "System networking info:"
        ip route show || route -n || echo "Route info unavailable"
        echo "IPv6 status (should be disabled):"
        cat /proc/sys/net/ipv6/conf/all/disable_ipv6 || echo "IPv6 status unavailable"
        echo "DNS configuration:"
        cat /etc/resolv.conf || echo "DNS config unavailable"
        
        echo "=== Testing External Services ==="
        
        # Maven Central Repository
        echo "1. Maven Central (repo.maven.apache.org):"
        curl -4 -I --connect-timeout 30 --max-time 60 https://repo.maven.apache.org/maven2/ && echo "✓ ACCESSIBLE" || echo "✗ FAILED"
        
        # Maven Central Mirror
        echo "2. Maven Central Mirror (repo1.maven.org):"
        curl -4 -I --connect-timeout 30 --max-time 60 https://repo1.maven.org/maven2/ && echo "✓ ACCESSIBLE" || echo "✗ FAILED"
        
        # Gradle Plugin Portal
        echo "3. Gradle Plugin Portal (plugins.gradle.org):"
        curl -4 -I --connect-timeout 30 --max-time 60 https://plugins.gradle.org/m2/ && echo "✓ ACCESSIBLE" || echo "✗ FAILED"
        
        # GitHub (for actions)
        echo "4. GitHub API:"
        curl -4 -I --connect-timeout 30 --max-time 60 https://api.github.com && echo "✓ ACCESSIBLE" || echo "✗ FAILED"
        
        # JCenter (backup repository)
        echo "5. JCenter Repository:"
        curl -4 -I --connect-timeout 30 --max-time 60 https://jcenter.bintray.com/ && echo "✓ ACCESSIBLE" || echo "✗ FAILED"
        
        # Aliyun Maven Mirror (backup)
        echo "6. Aliyun Maven Mirror:"
        curl -4 -I --connect-timeout 30 --max-time 60 https://maven.aliyun.com/repository/central && echo "✓ ACCESSIBLE" || echo "✗ FAILED"
        
        echo "=== DNS Resolution Tests ==="
        nslookup repo.maven.apache.org 8.8.8.8 && echo "✓ DNS Google OK" || echo "✗ DNS Google FAILED"
        nslookup plugins.gradle.org 1.1.1.1 && echo "✓ DNS Cloudflare OK" || echo "✗ DNS Cloudflare FAILED"
        
        echo "=== Network Speed Test ==="
        time curl -4 -o /dev/null -s -w "Download speed: %{speed_download} bytes/sec\n" https://repo.maven.apache.org/maven2/ || echo "Speed test failed"
        
        echo "=== End Diagnostics ==="

    - name: Prefetch key dependencies (single attempt)
      run: |
        set -e
        export JAVA_OPTS="-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false"
        export GRADLE_OPTS="-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false"
        echo "Prefetch: configuration phase & compile classpaths"
        ./gradlew --no-daemon --stacktrace :dependencies -q || true
        ./gradlew --no-daemon --stacktrace classes testClasses -x test || true

    - name: Check code formatting
      run: ./gradlew spotlessCheck --no-daemon --stacktrace

    - name: Build with tests
      run: |
        ./gradlew clean build --no-daemon --stacktrace \
          -Dorg.gradle.internal.http.connectionTimeout=180000 \
          -Dorg.gradle.internal.http.socketTimeout=180000 \
          -Djava.net.preferIPv4Stack=true \
          -Djava.net.preferIPv6Addresses=false

    - name: Deep network diagnostics (on failure)
      if: failure()
      run: |
        echo "=== Deep Network Diagnostics ==="
        echo "Active sockets (first 50):"; ss -tan | head -50 || true
        echo "Traceroute to repo.maven.apache.org:"; (traceroute -4 repo.maven.apache.org || tracepath repo.maven.apache.org || true)
        echo "Traceroute to plugins.gradle.org:"; (traceroute -4 plugins.gradle.org || tracepath plugins.gradle.org || true)
        echo "Curl with --resolve (Cloudflare edge test)"; curl -4 -I --connect-timeout 20 https://repo.maven.apache.org/maven2/ || true
        echo "DNS detailed:"; dig repo.maven.apache.org ANY || true
        echo "Network interfaces:"; ip addr || true
        echo "Routing table:"; ip route || true
        echo "End deep diagnostics"

    - name: Fallback build (without refresh dependencies)
      if: failure()
      run: |
        echo "Main build failed, attempting fallback build without dependency refresh..."
        ./gradlew clean build --no-daemon --stacktrace || {
          echo "Fallback build also failed. Generating diagnostic information..."
          echo "=== Gradle Info ==="
          ./gradlew --version || echo "Could not get Gradle version"
          echo "=== Java Info ==="
          java -version || echo "Could not get Java version"
          echo "=== Disk Space ==="
          df -h || echo "Could not get disk space info"
          echo "=== Memory Info ==="
          free -h || echo "Could not get memory info"
          exit 1
        }

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          build/test-results/
          app/build/test-results/
          build/reports/
          app/build/reports/
        retention-days: 30

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-artifacts
        path: |
          build/libs/
          app/build/libs/
          build/distributions/
          app/build/distributions/
        retention-days: 7
