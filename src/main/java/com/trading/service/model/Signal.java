package com.trading.service.model;

/** Represents a trading signal generated by a classification model. */
public class Signal {

  public enum SignalType {
    BUY(1),
    SELL(-1),
    HOLD(0);

    private final int value;

    SignalType(int value) {
      this.value = value;
    }

    public int getValue() {
      return value;
    }

    public static SignalType fromValue(int value) {
      for (SignalType type : values()) {
        if (type.value == value) {
          return type;
        }
      }
      throw new IllegalArgumentException("Unknown signal value: " + value);
    }

    public static SignalType fromString(String label) {
      if (label == null) {
        throw new IllegalArgumentException("Signal label cannot be null");
      }
      switch (label.toUpperCase()) {
        case "BUY":
          return BUY;
        case "SELL":
          return SELL;
        case "HOLD":
          return HOLD;
        default:
          throw new IllegalArgumentException("Unknown signal label: " + label);
      }
    }
  }

  private final SignalType type;
  private final double confidence;
  private final String modelName;
  private final String modelVersion;
  private final long timestamp;

  public Signal(
      SignalType type, double confidence, String modelName, String modelVersion, long timestamp) {
    this.type = type;
    this.confidence = confidence;
    this.modelName = modelName;
    this.modelVersion = modelVersion;
    this.timestamp = timestamp;
  }

  public SignalType getType() {
    return type;
  }

  public double getConfidence() {
    return confidence;
  }

  public String getModelName() {
    return modelName;
  }

  public String getModelVersion() {
    return modelVersion;
  }

  public long getTimestamp() {
    return timestamp;
  }

  public boolean isActionable() {
    return type != SignalType.HOLD && confidence > 0.5;
  }

  @Override
  public String toString() {
    return "Signal{"
        + "type="
        + type
        + ", confidence="
        + confidence
        + ", model='"
        + modelName
        + "' v"
        + modelVersion
        + ", timestamp="
        + timestamp
        + '}';
  }
}
